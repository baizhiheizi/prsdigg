{"version":3,"sources":["webpack://prsdigg/./app/packs/apps/shared/locales/i18n.ts"],"names":["i18nCall","availableLocales","i18n","LanguageDetector","use","initReactI18next","init","debug","fallbackLng","interpolation","escapeValue","load","keySeparator","resources","en","translation","translations","ja","supportedLngs"],"mappings":"mmwDAKaA,EAAW,SAACC,GACvBC,QAGOC,KAEJC,IAAIC,MAGJC,KAAK,CACJC,OAAO,EACPC,YAAaP,GAAoB,CAAC,MAClCQ,cAAe,CACbC,aAAa,GAEfC,KAAM,cACNC,cAAc,EACdC,UAAW,CACTC,GAAI,CAAEC,YAAaC,MACnB,QAAS,CAAED,YAAaC,KACxBC,GAAI,CAAEF,YAAaC,OAErBE,cAAejB,GAAoB,CAAC,KAAM,QAAS","file":"js/2215-bfbe3abbf60009e1545a.js","sourcesContent":["import i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { initReactI18next } from 'react-i18next';\nimport translations from './translations.json';\n\nexport const i18nCall = (availableLocales: string[]) => {\n  i18n\n    // detect user language\n    // learn more: https://github.com/i18next/i18next-browser-languageDetector\n    .use(LanguageDetector)\n    // pass the i18n instance to react-i18next.\n    .use(initReactI18next)\n    // init i18next\n    // for all options read: https://www.i18next.com/overview/configuration-options\n    .init({\n      debug: true,\n      fallbackLng: availableLocales || ['en'],\n      interpolation: {\n        escapeValue: false, // not needed for react as it escapes by default\n      },\n      load: 'currentOnly',\n      keySeparator: false,\n      resources: {\n        en: { translation: translations['en'] },\n        'zh-CN': { translation: translations['zh-CN'] },\n        ja: { translation: translations['ja'] },\n      },\n      supportedLngs: availableLocales || ['en', 'zh-CN', 'ja'],\n    });\n};\n"],"sourceRoot":""}