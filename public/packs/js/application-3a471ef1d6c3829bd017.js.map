{"version":3,"sources":["webpack://prsdigg/./app/packs/apps/application/components/LoadingComponent/LoadingComponent.tsx","webpack://prsdigg/./app/packs/apps/application/shared/constants/index.ts","webpack://prsdigg/./app/packs/apps/application/shared/utils/handleShare.tsx","webpack://prsdigg/./app/packs/apps/application/components/MenuComponent/MenuComponent.tsx","webpack://prsdigg/./app/packs/apps/application/components/HeaderComponent/HeaderComponent.tsx","webpack://prsdigg/./app/packs/apps/application/Routes.tsx","webpack://prsdigg/./app/packs/entrypoints/application.js","webpack://prsdigg/./app/packs/apps/application/App.tsx"],"names":["LoadingComponent","style","width","padding","textAlign","OPEN_SOURCE_URL","CHINESE_MIXIN_GROUP_AVATAR_URL","CHINESE_MIXIN_GROUP_DESCRIPTION","CHINESE_MIXIN_GROUP_APP_ID","CHINESE_MIXIN_GROUP_CODE_ID","handleTagShare","tag","mixinEnv","appId","logoFile","tagUrl","location","origin","id","data","action","app_id","description","articlesCount","icon_url","imagePath","title","name","handleShare","url","appCardData","replace","encodeURIComponent","encode64","JSON","stringify","copy","message","ArticleShareButton","props","useUserAgent","t","useTranslation","usePrsdigg","twitterAccount","appName","article","children","shareUrl","uuid","trigger","overlay","key","onClick","author","slice","handleArticleShare","className","ShareAltOutlined","TwitterShareButton","hashtags","tagNames","via","TwitterIcon","size","round","FacebookShareButton","quote","hashtag","FacebookIcon","CopyOutlined","MenuComponent","currentUser","useCurrentUser","mode","setDrawerVisible","i18n","justify","flexWrap","flexDirection","margin","href","src","avatar","to","flex","theme","selectable","target","GithubOutlined","languages","length","GlobalOutlined","language","includes","map","lng","changeLanguage","dot","unreadNotificationsCount","NotificationOutlined","type","HeaderComponent","useLocation","switchLocale","useSwitchLocaleMutation","history","useHistory","isMobile","useState","drawerVisible","pathname","showBack","setShowBack","useEffect","locale","variables","input","on","phone","Left","goBack","icon","MenuOutlined","bodyStyle","visible","closable","onClose","placement","WebkitBoxShadow","background","boxShadow","zIndex","ArticlePage","React","FairPage","HomePage","NotFoundPage","RulesPage","SearchPage","UserPage","TagPage","Routes","Suspense","fallback","path","exact","ReactOnRails","ApplicationApp","i18nCall","availableLocales"],"mappings":"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","file":"js/application-3a471ef1d6c3829bd017.js","sourcesContent":["import { Spin } from 'antd';\nimport React from 'react';\n\nexport default function LoadingComponent() {\n  return (\n    <div style={{ width: '100%', padding: '2rem', textAlign: 'center' }}>\n      <Spin />\n    </div>\n  );\n}\n","export const PRS_ICON_URL =\n  'https://mixin-images.zeromesh.net/1fQiAdit_Ji6_Pf4tW8uzutONh9kurHhAnN4wqEIItkDAvFTSXTMwlk3AB749keufDFVoqJb5fSbgz7K2HoOV7Q=s128';\nexport const PRSDIGG_ICON_URL =\n  'https://mixin-images.zeromesh.net/L0egX-GZxT0Yh-dd04WKeAqVNRzgzuj_Je_-yKf8aQTZo-xihd-LogbrIEr-WyG9WbJKGFvt2YYx-UIUa1qQMRla=s256';\nexport const BUNSHOW_ICON_URL =\n  'https://mixin-images.zeromesh.net/Dmoi5wjK1PEm_idEEF5Wlu88UJDZ_9JAHGJ9i8n51MMvUisXjlYlWKnC1NLWTk7Hj2krxnCfu_njyKE3qctTli3RCqkwjWdZbiA=s256';\nexport const OPEN_SOURCE_URL = 'https://github.com/baizhiheizi/prsdigg';\nexport const CHINESE_MIXIN_GROUP_AVATAR_URL =\n  'https://mixin-images.zeromesh.net/bFHtb9v2QQTgAFrZiDzNQgo7mbaFoRhnOcRf0pCU_CFCGgYMNSbi8E3D0NVW5u1AxZD2kI1MtmLLb2tqE4P4jw=s256';\nexport const CHINESE_MIXIN_GROUP_DESCRIPTION =\n  '顶瓜瓜（PRSDigg）官方中文社区，欢迎加入讨论任何顶瓜瓜相关的事情';\nexport const CHINESE_MIXIN_GROUP_APP_ID =\n  '74c6a598-345b-46ca-891f-b15c3139557b';\nexport const CHINESE_MIXIN_GROUP_CODE_ID =\n  'd9c39065-5021-454b-b2f5-bd95116e906d';\n","import { ShareAltOutlined, CopyOutlined } from '@ant-design/icons';\nimport { Dropdown, Menu, message } from 'antd';\nimport { imagePath, usePrsdigg, useUserAgent } from 'apps/shared';\nimport copy from 'copy-to-clipboard';\nimport { Article, Tag } from 'graphqlTypes';\nimport { encode as encode64 } from 'js-base64';\nimport React, { ReactChild, ReactChildren } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  FacebookIcon,\n  FacebookShareButton,\n  TwitterIcon,\n  TwitterShareButton,\n} from 'react-share';\n\nexport const handleArticleShare = (\n  article: Partial<Article>,\n  appId: string,\n  logoFile?: string,\n) => {\n  const articleUrl = `${location.origin}/articles/${article.uuid}`;\n  const data = {\n    action: articleUrl,\n    app_id: appId,\n    description: `${article.author.name}`,\n    icon_url: `${imagePath(logoFile || 'logo.png')}`,\n    title: article.title.slice(0, 36),\n  };\n  location.replace(\n    `mixin://send?category=app_card&data=${encodeURIComponent(\n      encode64(JSON.stringify(data)),\n    )}`,\n  );\n};\n\nexport const handleTagShare = (\n  tag: Partial<Tag>,\n  mixinEnv: boolean,\n  appId: string,\n  logoFile?: string,\n) => {\n  const tagUrl = `${location.origin}/tags/${tag.id}`;\n  const data = {\n    action: tagUrl,\n    app_id: appId,\n    description: `x ${tag.articlesCount}`,\n    icon_url: `${imagePath(logoFile || 'logo.png')}`,\n    title: `#${tag.name}`,\n  };\n  handleShare(tagUrl, data, mixinEnv);\n};\n\nexport const handleShare = (\n  url: string,\n  appCardData: object,\n  mixinEnv: boolean,\n) => {\n  if (mixinEnv) {\n    location.replace(\n      `mixin://send?category=app_card&data=${encodeURIComponent(\n        encode64(JSON.stringify(appCardData)),\n      )}`,\n    );\n  } else {\n    copy(url);\n    message.success('Copied');\n  }\n};\n\nexport function ArticleShareButton(props: {\n  article: Partial<Article>;\n  children: ReactChild | ReactChildren;\n}) {\n  const { mixinEnv } = useUserAgent();\n  const { t } = useTranslation();\n  const { logoFile, twitterAccount, appName, appId } = usePrsdigg();\n  const { article, children } = props;\n  const shareUrl = `${location.origin}/articles/${article.uuid}`;\n  return (\n    <Dropdown\n      trigger={['click', 'hover']}\n      overlay={\n        <Menu>\n          {mixinEnv && (\n            <Menu.Item\n              key='mixin'\n              onClick={() => {\n                handleArticleShare(article, appId, logoFile);\n              }}\n            >\n              <div className='flex items-center space-x-2'>\n                <ShareAltOutlined />\n                <span>{t('mixin_contact')}</span>\n              </div>\n            </Menu.Item>\n          )}\n          <Menu.Item key='twittier'>\n            <TwitterShareButton\n              url={shareUrl}\n              title={article.title}\n              hashtags={article.tagNames}\n              via={twitterAccount}\n            >\n              <div className='flex items-center space-x-2'>\n                <TwitterIcon size={16} round={true} />\n                <span>Twitter</span>\n              </div>\n            </TwitterShareButton>\n          </Menu.Item>\n          <Menu.Item key='facebook'>\n            <FacebookShareButton\n              url={shareUrl}\n              quote={article.title}\n              hashtag={appName}\n            >\n              <div className='flex items-center space-x-2'>\n                <FacebookIcon size={16} round={true} />\n                <span>Facebook</span>\n              </div>\n            </FacebookShareButton>\n          </Menu.Item>\n          <Menu.Item\n            key='url'\n            onClick={() => {\n              copy(shareUrl);\n              message.success(t('copied'));\n            }}\n          >\n            <div className='flex items-center space-x-2'>\n              <CopyOutlined />\n              <span>{t('copy_url')}</span>\n            </div>\n          </Menu.Item>\n        </Menu>\n      }\n    >\n      {children}\n    </Dropdown>\n  );\n}\n","import {\n  GithubOutlined,\n  GlobalOutlined,\n  NotificationOutlined,\n} from '@ant-design/icons';\nimport { Avatar, Badge, Button, Col, Menu, Row } from 'antd';\nimport { OPEN_SOURCE_URL } from 'apps/application/shared';\nimport { imagePath, useCurrentUser, usePrsdigg } from 'apps/shared';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\n\nexport default function MenuComponent(props: {\n  mode: 'horizontal' | 'vertical';\n  setDrawerVisible?: (visible: boolean) => void;\n}) {\n  const { currentUser } = useCurrentUser();\n  const { logoFile } = usePrsdigg();\n  const { mode, setDrawerVisible } = props;\n  const { t, i18n } = useTranslation();\n\n  return (\n    <Row\n      justify='center'\n      style={\n        mode === 'horizontal'\n          ? { flexWrap: 'nowrap' }\n          : { flexDirection: 'column', textAlign: 'center' }\n      }\n    >\n      <Col>\n        {currentUser && mode === 'vertical' ? (\n          <div style={{ margin: 15 }}>\n            <a href='/dashboard'>\n              <Avatar size='large' src={currentUser.avatar}>\n                {currentUser.name[0]}\n              </Avatar>\n            </a>\n          </div>\n        ) : (\n          <div style={{ margin: '0 15px' }}>\n            <Link to='/' replace>\n              <Avatar size='large' src={imagePath(logoFile)} />\n            </Link>\n          </div>\n        )}\n      </Col>\n      <Col flex={1}>\n        <Menu theme='light' mode={mode} selectable={false}>\n          <Menu.Item key='read' onClick={() => setDrawerVisible(false)}>\n            <Link to='/' replace>\n              {t('read')}\n            </Link>\n          </Menu.Item>\n          <Menu.Item key='write' onClick={() => setDrawerVisible(false)}>\n            {currentUser ? (\n              <a href='/dashboard/articles/new' target='_blank'>\n                {t('write')}\n              </a>\n            ) : (\n              <a href={`/login?return_to=${encodeURIComponent(location.href)}`}>\n                {t('write')}\n              </a>\n            )}\n          </Menu.Item>\n          <Menu.Item key='search' onClick={() => setDrawerVisible(false)}>\n            <Link to='/search' replace>\n              {t('search')}\n            </Link>\n          </Menu.Item>\n          <Menu.Item key='rules' onClick={() => setDrawerVisible(false)}>\n            <Link to='/rules' replace>\n              {t('rules')}\n            </Link>\n          </Menu.Item>\n          <Menu.Item key='fair' onClick={() => setDrawerVisible(false)}>\n            <Link to='/fair' replace>\n              {t('fair')}\n            </Link>\n          </Menu.Item>\n          <Menu.Item key='open_source' onClick={() => setDrawerVisible(false)}>\n            <a href={OPEN_SOURCE_URL} target='_blank'>\n              <GithubOutlined className='mr-2' />\n              {t('open_source')}\n            </a>\n          </Menu.Item>\n        </Menu>\n      </Col>\n      {i18n.languages.length > 1 && (\n        <Col>\n          <Menu theme='light' mode={mode} selectable={false}>\n            <Menu.SubMenu\n              key='global'\n              title={\n                mode === 'horizontal' ? (\n                  <GlobalOutlined />\n                ) : i18n.language.includes('en') ? (\n                  'Language'\n                ) : i18n.language.includes('ja') ? (\n                  '言語'\n                ) : (\n                  '语言'\n                )\n              }\n            >\n              {i18n.languages.map((lng) => {\n                if (lng.includes('CN')) {\n                  return (\n                    <Menu.Item key={lng}>\n                      <a onClick={() => i18n.changeLanguage('zh-CN')}>中文</a>\n                    </Menu.Item>\n                  );\n                } else if (lng.includes('en')) {\n                  return (\n                    <Menu.Item key={lng}>\n                      <a onClick={() => i18n.changeLanguage('en')}>EN</a>\n                    </Menu.Item>\n                  );\n                } else if (lng.includes('ja')) {\n                  return (\n                    <Menu.Item key={lng}>\n                      <a onClick={() => i18n.changeLanguage('ja')}>日本語</a>\n                    </Menu.Item>\n                  );\n                }\n              })}\n            </Menu.SubMenu>\n          </Menu>\n        </Col>\n      )}\n      {currentUser ? (\n        <Col>\n          <Menu mode={mode} selectable={false}>\n            <Menu.Item\n              key='notifications'\n              onClick={() => setDrawerVisible(false)}\n            >\n              <Badge dot={currentUser.unreadNotificationsCount > 0}>\n                <a href='/dashboard/notifications'>\n                  {mode === 'horizontal' ? (\n                    <NotificationOutlined />\n                  ) : (\n                    t('notifications_manage')\n                  )}\n                </a>\n              </Badge>\n            </Menu.Item>\n            <Menu.Item key='dashboard' onClick={() => setDrawerVisible(false)}>\n              <a href='/dashboard' target='_blank'>\n                {t('dashboard')}\n              </a>\n            </Menu.Item>\n            <Menu.Item key='logout' onClick={() => setDrawerVisible(false)}>\n              <a href='/logout'>{t('logout')}</a>\n            </Menu.Item>\n          </Menu>\n        </Col>\n      ) : (\n        <Col>\n          <Button type='link' href='/login'>\n            {t('login')}\n          </Button>\n        </Col>\n      )}\n    </Row>\n  );\n}\n","import { MenuOutlined } from '@ant-design/icons';\nimport { Left as LeftIcon } from '@icon-park/react';\nimport { Avatar, Button, Drawer, Layout } from 'antd';\nimport {\n  imagePath,\n  useCurrentUser,\n  usePrsdigg,\n  useUserAgent,\n} from 'apps/shared';\nimport { useSwitchLocaleMutation } from 'graphqlTypes';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport MenuComponent from '../MenuComponent/MenuComponent';\n\nexport default function HeaderComponent() {\n  const location = useLocation();\n  const { currentUser } = useCurrentUser();\n  const { i18n } = useTranslation();\n  const [switchLocale] = useSwitchLocaleMutation();\n  const history = useHistory();\n  const { appName, logoFile } = usePrsdigg();\n  const { mixinEnv, isMobile } = useUserAgent();\n  const [drawerVisible, setDrawerVisible] = useState(false);\n  const [showBack, setShowBack] = useState(location.pathname !== '/');\n\n  useEffect(() => {\n    setShowBack(location.pathname !== '/');\n  }, [location.pathname]);\n\n  useEffect(() => {\n    if (!currentUser) {\n      return;\n    }\n    if (currentUser.locale !== i18n.language) {\n      switchLocale({ variables: { input: { locale: i18n.language } } });\n    }\n    i18n.on('languageChanged', (lng: string) => {\n      switchLocale({ variables: { input: { locale: lng } } });\n    });\n  }, []);\n\n  if (isMobile.phone) {\n    return (\n      <>\n        <div className='sticky top-0 z-50 flex items-center px-2 py-1 bg-white shadow-sm'>\n          {showBack && (\n            <LeftIcon\n              className='text-gray-500'\n              size='1.5rem'\n              onClick={() => {\n                if (history.length <= 1) {\n                  history.replace('/');\n                } else {\n                  history.goBack();\n                }\n              }}\n            />\n          )}\n          <div\n            className='flex items-center'\n            onClick={() => history.replace('/')}\n          >\n            <Avatar size='large' src={imagePath(logoFile)} />\n            <span className='ml-2 text-lg font-semibold'>{appName}</span>\n          </div>\n          <Button\n            className='ml-auto text-gray-500'\n            type='link'\n            size='large'\n            onClick={() => setDrawerVisible(true)}\n            icon={<MenuOutlined />}\n          />\n          <div className={mixinEnv && 'w-24'} />\n        </div>\n        <Drawer\n          bodyStyle={{ padding: 0 }}\n          visible={drawerVisible}\n          closable={false}\n          onClose={() => setDrawerVisible(false)}\n          placement='right'\n        >\n          <MenuComponent mode='vertical' setDrawerVisible={setDrawerVisible} />\n        </Drawer>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Layout.Header\n        style={{\n          WebkitBoxShadow: '0 2px 8px #f0f1f2',\n          background: '#fff',\n          boxShadow: '0 2px 8px #f0f1f2',\n          padding: 0,\n          zIndex: 10,\n        }}\n      >\n        <MenuComponent mode='horizontal' />\n      </Layout.Header>\n    </>\n  );\n}\n","import React, { Suspense } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport LoadingComponent from './components/LoadingComponent/LoadingComponent';\nconst ArticlePage = React.lazy(() => import('./pages/ArticlePage/ArticlePage'));\nconst FairPage = React.lazy(() => import('./pages/FairPage/FairPage'));\nconst HomePage = React.lazy(() => import('./pages/HomePage/HomePage'));\nconst NotFoundPage = React.lazy(\n  () => import('./pages/NotFoundPage/NotFoundPage'),\n);\nconst RulesPage = React.lazy(() => import('./pages/RulesPage/RulesPage'));\nconst SearchPage = React.lazy(() => import('./pages/SearchPage/SearchPage'));\nconst UserPage = React.lazy(() => import('./pages/UserPage/UserPage'));\nconst TagPage = React.lazy(() => import('./pages/TagPage/TagPage'));\n\nexport default function Routes() {\n  return (\n    <>\n      <Suspense fallback={<LoadingComponent />}>\n        <Switch>\n          <Route path='/' exact>\n            <HomePage />\n          </Route>\n          <Route path='/articles/:uuid' exact>\n            <ArticlePage />\n          </Route>\n          <Route path='/tags/:id' exact>\n            <TagPage />\n          </Route>\n          <Route path='/users/:mixinId' exact>\n            <UserPage />\n          </Route>\n          <Route path='/search' exact>\n            <SearchPage />\n          </Route>\n          <Route path='/rules' exact>\n            <RulesPage />\n          </Route>\n          <Route path='/fair' exact>\n            <FairPage />\n          </Route>\n          <Route>\n            <NotFoundPage />\n          </Route>\n        </Switch>\n      </Suspense>\n    </>\n  );\n}\n","import ReactOnRails from 'react-on-rails';\nimport ApplicationApp from '../apps/application/App';\nimport '../stylesheets/application.css';\n\n// This is how react_on_rails can see the HelloWorld in the browser.\nReactOnRails.register({\n  ApplicationApp,\n});\n","import { Col, Layout, Row } from 'antd';\nimport { AppWrapperComponent } from 'apps/shared';\nimport { i18nCall } from 'apps/shared/locales/i18n';\n// https://github.com/apollographql/apollo-client/issues/6381\nimport 'core-js/features/promise';\nimport { User } from 'graphqlTypes';\nimport React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport HeaderComponent from './components/HeaderComponent/HeaderComponent';\nimport Routes from './Routes';\n\nexport default function App(props: {\n  csrfToken: string;\n  currentUser?: Partial<User>;\n  prsdigg: { appId: string; pageTitle?: string; attachmentEndpoint?: string };\n  defaultLocale: 'en' | 'ja' | 'zh-CN';\n  availableLocales: [string];\n}) {\n  i18nCall(props.availableLocales);\n\n  return (\n    <AppWrapperComponent {...props}>\n      <Router>\n        <Layout>\n          <HeaderComponent />\n          <Layout.Content className='p-4 bg-white'>\n            <div className='flex justify-center'>\n              <div className='w-full xl:max-w-5xl'>\n                <Routes />\n              </div>\n            </div>\n          </Layout.Content>\n        </Layout>\n      </Router>\n    </AppWrapperComponent>\n  );\n}\n"],"sourceRoot":""}